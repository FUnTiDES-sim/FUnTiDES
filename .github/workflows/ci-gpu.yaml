name: CI-GPU

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

  # TODO RUN after CPU only if success
on:
  pull_request:
    branches:
      - main

  workflow_dispatch: # Allow to start this workflow manually

jobs:

  build:
    runs-on: hpc-us
    strategy:
      matrix:
        arch: [h200] # add cypress_dgx when ready
        #pywrap: [pywrap-on, pywrap-off] TODO activate python
        pywrap: [pywrap-off]
        #programming_model: [vector, kokkos] TODO activate vector
        programming_model: [kokkos]

        # Exclude Vector + Python (wrappers use Kokkos)
        exclude:
        - programming_model: vector
          pywrap: pywrap-on
        
        # Include head nodes
        include:
          - arch: h200
            partition: maple_mig
            head_node: maple-1

      max-parallel: 5

    continue-on-error: true # We want to run other builds even if some build fails

    steps:

      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      # FOR MAPLE
      - name: Submit Slurm H200
        if: ${{ matrix.partition != 'cypress_dgx' }}
        uses: ./.github/actions/slurm-submit
        env:
          SLURM_PARTITION: ${{ matrix.partition }}
          PYWRAP: ${{ matrix.pywrap }}
          PROGRAMMING_MODEL: ${{ matrix.programming_model }}
        with:
          job-name: funtides-${{ matrix.partition }}-${{ matrix.pywrap }}-${{ matrix.programming_model }}
          head-node: ${{ matrix.head_node }}
          partition: ${{ matrix.partition }}
          run-script: |
            ./.github/scripts/build_and_test_gpu.sh

      # FOR CYPRESS
      - name: Allocate Slurm A100
        if: ${{ matrix.partition == 'cypress_dgx' }}
        uses: ./.github/actions/slurm-salloc
        env:
          SLURM_PARTITION: ${{ matrix.partition }}
          PYWRAP: ${{ matrix.pywrap }}
          PROGRAMMING_MODEL: ${{ matrix.programming_model }}
        with:
          job-name: funtides-${{ matrix.partition }}-${{ matrix.pywrap }}-${{ matrix.programming_model }}
          run-script: |
            ./.github/scripts/build_and_test_gpu.sh